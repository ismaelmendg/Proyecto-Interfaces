#include <wiringPi.h>
#include <wiringPiI2C.h>
#include <stdio.h>
#include <string.h>
#include <fcntl.h>
#include <stdlib.h>

//#define dir 0x64
#define REG_FIFO_CLK       0x5F
#define REG_INT_STATUS     0x00
#define REG_PAD_IO_CTRL    0x02
#define REG_OP_MODE        0x10
#define SLOTx_NUM_AVG      0x15
#define FSAMPLE            0x12
#define SLOTA_CH1_OFFSET   0x18
#define SLOTA_CH2_OFFSET   0x19
#define SLOTA_CH3_OFFSET   0x1A
#define SLOTA_CH4_OFFSET   0x1B
#define SLOTB_CH1_OFFSET   0x1E 
#define SLOTB_CH2_OFFSET   0x1F
#define SLOTB_CH3_OFFSET   0x20
#define SLOTB_CH4_OFFSET   0x21
#define LED_DISABLE        0x34
#define FIFO_THRESH        0x06
#define REG_OP_MODE_CFG    0x11
#define REG_PD_SELECT      0x14
#define REG_LED3_DRV       0x22
#define REG_LED1_DRV       0x23
#define REG_LED2_DRV       0x24
#define REG_LED_TRIM       0x25
#define REG_PULSE_OFFSET_A 0x30
#define REG_PULSE_PERIOD_A 0x31
#define REG_PULSE_OFFSET_B 0x35
#define REG_PULSE_PERIOD_B 0x36
#define REG_AFE_CTRL_A     0x39
#define REG_AFE_CTRL_B     0x3B
#define AFE_PWR_CFG1       0x3C
#define SLOTA_TIA_CFG	   0x42
#define SLOTA_AFE_CFG      0x43
#define SLOTB_TIA_CFG      0x44
#define SLOTB_AFE_CFG      0x45
#define CLK32K             0x4B
#define CLK32M             0x4D
#define AFE_PWR_CFG2       0x54
#define FLT_LED            0x3F
#define REG_CALIBRATE      0x58
#define FLT_B              0x59
#define REG_DIG_INT_CFG    0x5A
#define 0xFFFF//FFFF

void config(void)
{
	printf("I2C Init\n");
	wiringPiSetup();
	dir = wiringPiI2CSetup(0x64);

	wiringPiI2CWriteReg16(dir, REG_OP_MODE, 0x01);//Modo programaci√≥n
	wiringPiI2CWriteReg16(dir, REG_FIFO_CLK,0x0001);//
	wiringPiI2CWriteReg16(dir, REG_INT_STATUS,0x8000 | 0x01FF);
	wiringPiI2CWriteReg16(dir, REG_OP_MODE, 0x00);
	wiringPiI2CWriteReg16(dir, REG_FIFO_CLK,0x00);
	wiringPiI2CWriteReg16(dir, REG_PAD_IO_CTRL,0x00);////////SetInterruptControl

	wiringPiI2CWriteReg16(dir, REG_OP_MODE, 0x01);
	wiringPiI2CWriteReg16(dir, REG_FIFO_CLK, 0x1);
	wiringPiI2CWriteReg16(dir, REG_INT_STATUS, 0x80FF);
	wiringPiI2CWriteReg16(dir, REG_OP_MODE, 0x00);

	wiringPiI2CWriteReg16(dir, REG_OP_MODE, 0x01);
	wiringPiI2CWriteReg16(dir, SLOTx_NUM_AVG,      0x330);
	wiringPiI2CWriteReg16(dir, FSAMPLE,            0x14);
	wiringPiI2CWriteReg16(dir, SLOTA_CH1_OFFSET,   0x3FFF);
	wiringPiI2CWriteReg16(dir, SLOTA_CH2_OFFSET,   0x3FFF);
	wiringPiI2CWriteReg16(dir, SLOTA_CH3_OFFSET,   0x1F00);
	wiringPiI2CWriteReg16(dir, SLOTA_CH4_OFFSET,   0x1F00);
	wiringPiI2CWriteReg16(dir, SLOTB_CH1_OFFSET,   0x3FFF);
	wiringPiI2CWriteReg16(dir, SLOTB_CH2_OFFSET,   0x3FFF);
	wiringPiI2CWriteReg16(dir, SLOTB_CH3_OFFSET,   0x1F00);
	wiringPiI2CWriteReg16(dir, SLOTB_CH4_OFFSET,   0x1F00);
	wiringPiI2CWriteReg16(dir, LED_DISABLE,        0x0000);
	wiringPiI2CWriteReg16(dir, FIFO_THRESH,        0x0000);
	wiringPiI2CWriteReg16(dir, REG_OP_MODE_CFG,    0x30A0);
	wiringPiI2CWriteReg16(dir, REG_PD_SELECT,      0x0555);
	wiringPiI2CWriteReg16(dir, REG_LED3_DRV,       0x1030);
	wiringPiI2CWriteReg16(dir, REG_LED1_DRV,       0x3036);
	wiringPiI2CWriteReg16(dir, REG_LED2_DRV,       0x1030);
	wiringPiI2CWriteReg16(dir, REG_LED_TRIM,       0x360C);
	wiringPiI2CWriteReg16(dir, REG_PULSE_OFFSET_A, 0x0220);
	wiringPiI2CWriteReg16(dir, REG_PULSE_PERIOD_A, 0x020F);
	wiringPiI2CWriteReg16(dir, REG_PULSE_OFFSET_B, 0x0220);
	wiringPiI2CWriteReg16(dir, REG_PULSE_PERIOD_B, 0x020F);
	wiringPiI2CWriteReg16(dir, REG_AFE_CTRL_A,     0x1AF8);
	wiringPiI2CWriteReg16(dir, REG_AFE_CTRL_B,     0x1AF8);
	wiringPiI2CWriteReg16(dir, AFE_PWR_CFG1,       0x7006);
	wiringPiI2CWriteReg16(dir, SLOTA_TIA_CFG       0x1C35);
	wiringPiI2CWriteReg16(dir, SLOTA_AFE_CFG,      0xADA5);
	wiringPiI2CWriteReg16(dir, SLOTB_TIA_CFG,      0x1C34);
	wiringPiI2CWriteReg16(dir, SLOTB_AFE_CFG,      0xADA5);
	wiringPiI2CWriteReg16(dir, AFE_PWR_CFG2,       0x0AA0);
	wiringPiI2CWriteReg16(dir, FLT_LED,            0x0320);
	wiringPiI2CWriteReg16(dir, REG_CALIBRATE,      0x0000);
	wiringPiI2CWriteReg16(dir, FLT_B,              0x0808);
	wiringPiI2CWriteReg16(dir, REG_DIG_INT_CFG,    0x0010);
	wiringPiI2CWriteReg16(dir, CLK32K,             0x2695);
	wiringPiI2CWriteReg16(dir, CLK32M,             0x4272);
	wiringPiI2CWriteReg16(dir, REG_OP_MODE,        0x02);

	printf("Config finish\n");
}

int main (void)
{

	config();
while(1)
{

}
    	return 0;
}

